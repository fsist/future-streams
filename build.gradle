defaultTasks 'compileScala', 'compileTestScala'

// Declares a dependency on another project and also includes the target project's test classes in this project's test classpath.
// Use this instead of just `testCompile project(name)`.
// Parameters:
// - The current (dependent) project; pass the `project` value
// - The target project name (e.g. 'fs_Xxx')
def dependOnProject(srcproj, name) {
  def path = ":$name"
  def targetproj = project(path)

  srcproj.dependencies {
    compile project(path)
    testCompile project(path: path, configuration: 'testCompile')
    testCompile files(srcproj.parent.subprojects.find { it.name == name } .tasks.compileTestScala.destinationDir)
  }

  srcproj.compileTestScala.dependsOn(":$name:compileTestScala")
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.1'
}

subprojects {
  apply plugin: 'scala'

  // Can't set targetCompatibility (i.e. JDK level) to 1.7 or above because of https://issues.scala-lang.org/browse/SI-8645
  // Which was due to JDK bug https://bugs.openjdk.java.net/browse/JDK-8046233 which was fixed in JDK 7u76 / 8u25 (but we don't have those new versions yet)
  compileScala.sourceCompatibility = '1.6'
  compileScala.targetCompatibility = '1.6'

  compileScala.scalaCompileOptions.deprecation = true
  compileScala.scalaCompileOptions.failOnError = true
  compileScala.scalaCompileOptions.unchecked = true
  compileScala.scalaCompileOptions.additionalParameters = ['-feature']

  repositories {
    mavenCentral()
  }
  
  version = '0.5'
  
  dependencies {
    compile 'org.scala-lang:scala-library:2.10.4'
    compile 'org.scala-lang:scala-reflect:2.10.4'

    // TODO: compile time only
    compile 'org.scala-lang:scala-compiler:2.10.4'
	
	compile 'org.reactivestreams:reactive-streams:0.4.0'
    compile 'org.scala-lang.modules:scala-async_2.10:0.9.2'
    compile 'com.typesafe:scalalogging-slf4j_2.10:1.0.1'

    testCompile 'org.scalatest:scalatest_2.10:2.2.1'
	testCompile 'org.reactivestreams:reactive-streams-tck:0.4.0'
  }

  /* TESTS */

  task testJar(type: Jar, dependsOn: compileTestScala) {
    from compileTestScala.destinationDir
    appendix 'test' // Names the jar
  }

  task scalatest(type: JavaExec, dependsOn: [ compileTestScala, testJar] ) {
    maxHeapSize '4096M'
    main 'org.scalatest.tools.Runner'
    classpath compileTestScala.classpath
    classpath testJar.archivePath
    args = [ '-o', '-w', 'com.fsist', '-h', 'test-output-html', '-R', testJar.archivePath ]
  }
}

task scalatestall(type: JavaExec) {
  maxHeapSize '4096M'
  main 'org.scalatest.tools.Runner'

  for (prj in subprojects) {
    classpath prj.compileScala.classpath
    classpath prj.compileTestScala.classpath
    classpath prj.testJar.archivePath
  }

  def testJars = subprojects.collect { it.testJar.archivePath.toString().replace(" ", "\\ ") }
  def testJarsPath = "\"${testJars.join(' ')}\"".toString()

  args = [ '-o', '-w', 'com.fsist', '-h', 'test-output-html', '-R', testJarsPath ]
}

for (prj in subprojects) {
  scalatestall.dependsOn(prj.compileTestScala)
}

